name: Build (Windows)

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      # Note: jdk8 is necessary to use javah
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Set up build cache
        uses: actions/cache@v2
        with:
          path: $HOME/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build minisat.dll
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/niklasso/minisat minisat-src
          cd minisat-src
          git apply -v ../patches/minisat-*.patch
          cmake -B build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target minisat-lib-shared

      - name: Build glucose.dll
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/wadoon/glucose glucose-src
          cd glucose-src
          git apply -v ../patches/glucose-*.patch
          cmake -B build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target glucose

      - name: Compile classes
        run: ./gradlew classes --stacktrace

      - name: Build jminisat.dll
        working-directory: kotlin-satlib-jni
        run: |
          javah -d build/headers -classpath build/classes/kotlin/main com.github.lipen.satlib.solver.jni.JMiniSat
          mkdir -p build/lib
          g++ -Wall -O3 -fPIC -shared -s -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -I${JAVA_HOME}/include -I${JAVA_HOME}/include/win32 -Ibuild/headers -Iminisat-src -Lminisat-src/build src/main/cpp/JMiniSat.cpp -lminisat -o build/lib/jminisat.dll

      - name: Build jglucose.dll
        working-directory: kotlin-satlib-jni
        run: |
          javah -d build/headers -classpath build/classes/kotlin/main com.github.lipen.satlib.solver.jni.JGlucose
          mkdir -p build/lib
          ln -s glucose-src glucose
          g++ -Wall -O3 -fPIC -shared -s -I${JAVA_HOME}/include -I${JAVA_HOME}/include/win32 -Ibuild/headers -Iglucose-src -I. -Lglucose-src/build src/main/cpp/JGlucose.cpp -lglucose -o build/lib/jglucose.dll

      - name: Build package using Gradle wrapper
        run: ./gradlew build -x test --stacktrace

      - name: Upload to GH Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            kotlin-satlib-jni/build/lib/jminisat.dll
            kotlin-satlib-jni/build/lib/jglucose.dll
            kotlin-satlib-jni/minisat-src/build/minisat.dll
            kotlin-satlib-jni/glucose-src/build/glucose.dll

name: Build (Windows)

on: [ push, pull_request ]

jobs:
  build:
    runs-on: windows-latest

    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      # Note: jdk8 is necessary to use javah
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Set up build cache
        uses: actions/cache@v2
        with:
          path: $HOME/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build minisat.dll
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/niklasso/minisat minisat-src
          cd minisat-src
          git apply -v ../patches/minisat-*.patch
          cmake -B build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target minisat-lib-shared

      - name: Build glucose.dll
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/wadoon/glucose glucose-src
          cd glucose-src
          git apply -v ../patches/glucose-*.patch
          cmake -B build -G "MinGW Makefiles" -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target glucose

      - name: Build cadical.dll
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/arminbiere/cadical solvers/cadical-src
          cd solver/cadical-src
          git apply -v ../../patches/cadical-shared.patch
          patch -p0 <../../patches/cadical-stats.patch
          ./configure -fPIC
          make -j16 dll
          mkdir -p install/include/cadical install/lib
          cp src/cadical.hpp install/include/cadical
          cp build/cadical.dll install/lib

      - name: Build cryptominisat5.dll
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/msoos/cryptominisat solvers/cms-src
          cd solvers/cms-src
          cmake -B build -DENABLE_PYTHON_INTERFACE=OFF -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles"
          cmake --build build -- -j8
          cmake --install build --prefix install

      - name: Compile classes
        run: ./gradlew classes --stacktrace

      - name: Make JNI headers
        working-directory: kotlin-satlib-jni
        run: make headers

      - name: Build JNI libs
        working-directory: kotlin-satlib-jni
        run: make libs \
          JDK_INCLUDE_SUBDIR=win32 \
          MINISAT_INCLUDE_DIR=solvers/minisat-src \
          MINISAT_LIB_DIR=solvers/minisat-src/build \
          GLUCOSE_INSTALL_DIR=solvers/glucose-src/install \
          CADICAL_INSTALL_DIR=solvers/cadical-src/install \
          CMS_INSTALL_DIR=solvers/cms-src/install \
          JCMS_LDLIBS=-lcryptominisat5win

      - name: Copy JNI libs to resources folder
        working-directory: kotlin-satlib-jni
        run: |
          mkdir -p src/main/resources/lib/win64
          cp build/lib/libjminisat.so src/main/resources/lib/win64/jminisat.dll
          cp build/lib/libjglucose.so src/main/resources/lib/win64/jglucose.dll
          cp build/lib/libjcadical.so src/main/resources/lib/win64/jcadical.dll
          cp build/lib/libjcms.so src/main/resources/lib/win64/jcms.dll

      - name: Build package using Gradle wrapper
        run: ./gradlew build --stacktrace --scan

      - name: Upload to GH Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            kotlin-satlib-jni/build/lib/jminisat.dll
            kotlin-satlib-jni/build/lib/jglucose.dll
            kotlin-satlib-jni/build/lib/jcadical.dll
            kotlin-satlib-jni/build/lib/jcms.dll
            kotlin-satlib-jni/minisat-src/build/minisat.dll
            kotlin-satlib-jni/glucose-src/install/lib/glucose.dll
            kotlin-satlib-jni/cadical-src/install/lib/cadical.dll
            kotlin-satlib-jni/cms-src/install/bin/libcryptominisat5.dll

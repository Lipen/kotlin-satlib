name: Build

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      # Note: jdk8 is necessary to use javah
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Compile classes
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: :jni:classes
          dependencies-cache-enabled: true

      - name: Create directory for solvers
        working-directory: kotlin-satlib-jni
        run: mkdir -p solvers

      - name: Build MiniSat
        working-directory: kotlin-satlib-jni/solvers
        run: |
          git clone --depth=1 https://github.com/msoos/minisat minisat-src
          cd minisat-src
          make config prefix=install MINISAT_REL='-O3 -DNDEBUG -fpermissive'
          make install

      - name: Build Glucose
        working-directory: kotlin-satlib-jni/solvers
        run: |
          git clone --depth=1 https://github.com/wadoon/glucose glucose-src
          cd glucose-src
          git apply -v ../../patches/glucose-install.patch
          cmake -B build -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build build -- -j8
          cmake --install build --prefix install

      - name: Build Cadical
        working-directory: kotlin-satlib-jni/solvers
        run: |
          git clone --depth=1 --branch rel-1.3.0 https://github.com/arminbiere/cadical cadical-src
          cd cadical-src
          git apply -v ../../patches/cadical-shared-lib.patch
          ./configure -j8 -fPIC CXXFLAGS="-s"
          make lsh
          install -m 644 src/cadical.hpp -Dt install/include/cadical
          install -m 644 build/libcadical.so -Dt install/lib
          strip -s install/lib/libcadical.so

      - name: Build CryptoMiniSat
        working-directory: kotlin-satlib-jni/solvers
        run: |
          git clone --depth=1 --branch 5.8.0 https://github.com/msoos/cryptominisat cms-src
          cd cms-src
          cmake -B build -DENABLE_PYTHON_INTERFACE=OFF -DCMAKE_BUILD_TYPE=Release
          cmake --build build -- -j8
          cmake --install build --prefix install

      - name: Set up ld cache
        working-directory: kotlin-satlib-jni
        run: sudo ldconfig $(realpath solvers/*-src/install/lib)

      - name: Make JNI headers
        working-directory: kotlin-satlib-jni
        run: make headers

      - name: Build JNI libs
        working-directory: kotlin-satlib-jni
        run: make libs \
          MINISAT_INSTALL_DIR=solvers/minisat-src/install \
          GLUCOSE_INSTALL_DIR=solvers/glucose-src/install \
          CADICAL_INSTALL_DIR=solvers/cadical-src/install \
          CMS_INSTALL_DIR=solvers/cms-src/install

      - name: Copy JNI libs to resources folder
        working-directory: kotlin-satlib-jni
        run: make res

      - name: Download Cryptominisat
        run: |
          mkdir -p bin
          wget -qO- https://github.com/msoos/cryptominisat/releases/download/5.8.0/cryptominisat5_amd64_linux_static.gz | zcat > bin/cryptominisat5
          chmod +x bin/cryptominisat5
          echo "$(realpath bin)" >> $GITHUB_PATH

      - name: Build using Gradle
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build --stacktrace --scan
          dependencies-cache-enabled: true

      - name: Upload to GH Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            kotlin-satlib-jni/build/lib/libjminisat.so
            kotlin-satlib-jni/build/lib/libjglucose.so
            kotlin-satlib-jni/build/lib/libjcadical.so
            kotlin-satlib-jni/build/lib/libjcms.so

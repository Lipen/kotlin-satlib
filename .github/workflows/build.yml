name: Build

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      # Note: jdk8 is necessary to use javah
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Set up build cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Compile classes
        run: ./gradlew :jni:classes

      - name: Set up solvers cache
        id: cache-solvers
        uses: actions/cache@v2
        with:
          path: kotlin-satlib-jni/solvers
          key: ${{ runner.os }}-solvers-cache-1

      - name: Build MiniSat
        if: steps.cache-solvers.outputs.cache-hit != 'true'
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/msoos/minisat solvers/minisat-src
          cd solvers/minisat-src
          make config prefix=install MINISAT_REL='-O3 -DNDEBUG -fpermissive'
          make install

      - name: Build Glucose
        if: steps.cache-solvers.outputs.cache-hit != 'true'
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 https://github.com/wadoon/glucose solvers/glucose-src
          cd solvers/glucose-src
          git apply -v ../../patches/glucose-install.patch
          cmake -B build -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build build -- -j8
          cmake --install build --prefix install

      - name: Build Cadical
        if: steps.cache-solvers.outputs.cache-hit != 'true'
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 --branch rel-1.4.1 https://github.com/arminbiere/cadical solvers/cadical-src
          cd solvers/cadical-src
          git apply -v ../../patches/cadical-shared.patch
          patch -p0 < ../../patches/cadical-stats.patch
          ./configure -fPIC
          make -j8 shared
          install -m 644 src/cadical.hpp -Dt install/include/cadical
          install -m 644 build/libcadical.so -Dt install/lib
          strip -s install/lib/libcadical.so

      - name: Build CryptoMiniSat
        if: steps.cache-solvers.outputs.cache-hit != 'true'
        working-directory: kotlin-satlib-jni
        run: |
          git clone --depth=1 --branch 5.8.0 https://github.com/msoos/cryptominisat solvers/cms-src
          cd solvers/cms-src
          cmake -B build -DENABLE_PYTHON_INTERFACE=OFF -DCMAKE_BUILD_TYPE=Release
          cmake --build build -- -j8
          cmake --install build --prefix install

      - name: Set up ld cache
        working-directory: kotlin-satlib-jni
        run: sudo ldconfig $(realpath solvers/*-src/install/lib)

      - name: Make JNI headers
        working-directory: kotlin-satlib-jni
        run: make headers

      - name: Build JNI libs
        working-directory: kotlin-satlib-jni
        run: make libs \
          MINISAT_INSTALL_DIR=solvers/minisat-src/install \
          GLUCOSE_INSTALL_DIR=solvers/glucose-src/install \
          CADICAL_INSTALL_DIR=solvers/cadical-src/install \
          CMS_INSTALL_DIR=solvers/cms-src/install

      - name: Copy JNI libs to resources folder
        working-directory: kotlin-satlib-jni
        run: make res

      - name: Download Cryptominisat
        run: |
          mkdir -p bin
          wget -qO- https://github.com/msoos/cryptominisat/releases/download/5.8.0/cryptominisat5_amd64_linux_static.gz | zcat > bin/cryptominisat5
          chmod +x bin/cryptominisat5
          echo "$(realpath bin)" >> $GITHUB_PATH

      - name: Build using Gradle
        run: ./gradlew build --stacktrace --scan

      - name: Copy solver libs to a separate folder
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir -p libs
          cp kotlin-satlib-jni/solvers/minisat-src/install/lib/libminisat.so libs/
          cp kotlin-satlib-jni/solvers/glucose-src/install/lib/libglucose.so libs/
          cp kotlin-satlib-jni/solvers/cadical-src/install/lib/libcadical.so libs/
          cp kotlin-satlib-jni/solvers/cms-src/install/lib/libcryptominisat5.so libs/

      - name: Upload to GH Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            kotlin-satlib-jni/build/lib/libjminisat.so
            kotlin-satlib-jni/build/lib/libjglucose.so
            kotlin-satlib-jni/build/lib/libjcadical.so
            kotlin-satlib-jni/build/lib/libjcms.so
            libs/*.so
